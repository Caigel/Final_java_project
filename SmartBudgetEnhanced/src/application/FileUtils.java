package application;

import javafx.collections.ObservableList;
import java.io.*; import java.nio.charset.StandardCharsets; import java.util.*;

public class FileUtils { private static final String HEADER="id,date,amount,category,description,type"; public static void ensureHeader(File file) throws IOException { if(!file.exists()){ try(BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file),StandardCharsets.UTF_8))){ bw.write(HEADER+"\n"); } } } public static java.util.List<Transaction> load(File file) throws IOException { ensureHeader(file); java.util.List<Transaction> list=new ArrayList<>(); try(BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(file),StandardCharsets.UTF_8))){ String line; boolean first=true; while((line=br.readLine())!=null){ if(first){first=false; continue;} if(line.trim().isEmpty()) continue; String[] p=parseCsvLine(line); if(p.length<6) continue; int id=Integer.parseInt(p[0]); String date=p[1]; double amount=Double.parseDouble(p[2]); String category=p[3]; String description=p[4]; String type=p[5]; list.add(new Transaction(id,date,amount,category,description,type)); } } return list; } public static void save(File file, ObservableList<Transaction> data) throws IOException { try(BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file,false),StandardCharsets.UTF_8))){ bw.write(HEADER+"\n"); for(Transaction t:data){ bw.write(String.format("%d,%s,%s,%s,%s,%s\n", t.getId(), escape(t.getDate()), Double.toString(t.getAmount()), escape(t.getCategory()), escape(t.getDescription()), escape(t.getType()))); } } } private static String escape(String s){ if(s==null) return ""; boolean needs=s.contains(",")||s.contains("\"")||s.contains("\n")||s.contains("\r"); if(!needs) return s; return "\""+s.replace("\"","\"\"")+"\""; } private static String[] parseCsvLine(String line){ java.util.List<String> out=new ArrayList<>(); StringBuilder cur=new StringBuilder(); boolean inQuotes=false; for(int i=0;i<line.length();i++){ char c=line.charAt(i); if(inQuotes){ if(c=='"'){ if(i+1<line.length()&&line.charAt(i+1)=='"'){ cur.append('"'); i++; } else { inQuotes=false; } } else { cur.append(c);} } else { if(c==','){ out.add(cur.toString()); cur.setLength(0);} else if(c=='"'){ inQuotes=true;} else { cur.append(c);} } } out.add(cur.toString()); return out.toArray(new String[0]); } }